#include<cstdio>
#include<iostream>
#include<algorithm>
using namespace std;
int dp[55][10578];
int time1[55][10578];       //用与dp同样的数组同步储存对应总时长//time与头文件重名，改作time1                                   
int song[55];
int cnt = 0;
void DP(int n,int t)
{
	cnt++;
	for (int i = 1; i <= n;i++)
	for (int j = 0; j <= t;j++)            
	{
		if (j > song[i])
		{
			dp[i][j] = max(dp[i - 1][j], dp[i - 1][j - song[i]] + 1);
			if (dp[i-1][j] == dp[i - 1][j - song[i]] + 1)
				time1[i][j] = max(time1[i - 1][j], time1[i - 1][j - song[i]] + 1);
			else if (dp[i][j] == dp[i - 1][j - song[i]] + 1)              /**///以下几处另time数组与dp数组同步递推
				time1[i][j] = time1[i - 1][j - song[i]] + song[i];
			else
				time1[i][j] = time1[i - 1][j];						/**/
		}
		else						                                /**/
		{
			dp[i][j] = dp[i - 1][j];
			time1[i][j] = time1[i - 1][j];							
		}
	}
	cout << "Case " << cnt << ": " << dp[n][t] + 1 << " " << time1[n][t] + 678<<endl;
		return ;
}
int main()
{
	int T;
	cin >> T;
	while (T--)
	{
		int n, t;
		cin >> n >> t;
		for (int i = 1; i <= n; i++)
			cin >> song[i];
		DP(n,t);
	}
	return 0;
}
